# keep both template targets and variables in alphabetical order
templates:
  - source: 'src/github/dependabot.yml.tmpl'
    target: '.github/dependabot.yml'
  - source: 'src/github/workflows/docker.yml.tmpl'
    target: '.github/workflows/docker.yml'
  - source: 'src/github/workflows/go.yml.tmpl'
    target: '.github/workflows/go.yml'
  - source: 'src/api/generator/generate.sh.tmpl'
    target: 'api/generator/generate.sh'
  - source: 'src/api/generator/postprocess.go.tmpl'
    target: 'api/generator/postprocess.go'
  - source: 'src/api/openapi-spec.yaml.tmpl'
    target: 'api/openapi-spec.yaml'
  - source: 'src/cmd/main.go.tmpl'
    target: 'cmd/main.go'
  - source: 'src/docs/local-config.template.yaml.tmpl'
    target: 'docs/local-config.template.yaml'
  - source: 'src/docs/testdocs.go.tmpl'
    target: 'docs/testdocs.go'
  - source: 'src/internal/apimodel/apimodel.go.tmpl'
    target: 'internal/apimodel/apimodel.go'
  - source: 'src/internal/application/app/app.go.tmpl'
    target: 'internal/application/app/app.go'
  - source: 'src/internal/application/common/context.go.tmpl'
    target: 'internal/application/common/context.go'
  - source: 'src/internal/application/common/errors.go.tmpl'
    target: 'internal/application/common/errors.go'
  - source: 'src/internal/application/middleware/cors.go.tmpl'
    target: 'internal/application/middleware/cors.go'
  - source: 'src/internal/application/middleware/recoverer.go.tmpl'
    target: 'internal/application/middleware/recoverer.go'
  - source: 'src/internal/application/middleware/reqid.go.tmpl'
    target: 'internal/application/middleware/reqid.go'
  - source: 'src/internal/application/middleware/requestlogging.go.tmpl'
    target: 'internal/application/middleware/requestlogging.go'
  - source: 'src/internal/application/middleware/requestmetrics.go.tmpl'
    target: 'internal/application/middleware/requestmetrics.go'
  - source: 'src/internal/application/middleware/security.go.tmpl'
    target: 'internal/application/middleware/security.go'
  - source: 'src/internal/application/middleware/security_test.go.tmpl'
    target: 'internal/application/middleware/security_test.go'
  - source: 'src/internal/application/middleware/timeout.go.tmpl'
    target: 'internal/application/middleware/timeout.go'
  - source: 'src/internal/application/server/lowlevel.go.tmpl'
    target: 'internal/application/server/lowlevel.go'
  - source: 'src/internal/application/server/server.go.tmpl'
    target: 'internal/application/server/server.go'
  - source: 'src/internal/application/web/endpoint.go.tmpl'
    target: 'internal/application/web/endpoint.go'
  - source: 'src/internal/application/web/endpoint_test.go.tmpl'
    target: 'internal/application/web/endpoint_test.go'
  - source: 'src/internal/application/web/response.go.tmpl'
    target: 'internal/application/web/response.go'
  - source: 'src/internal/controller/examplectl/examplectl.go.tmpl'
    target: 'internal/controller/examplectl/examplectl.go'
  - source: 'src/internal/controller/examplectl/examplectl_get.go.tmpl'
    target: 'internal/controller/examplectl/examplectl_get.go'
  - source: 'src/internal/controller/examplectl/examplectl_post.go.tmpl'
    target: 'internal/controller/examplectl/examplectl_post.go'
  - source: 'src/internal/controller/infoctl/infoctl.go.tmpl'
    target: 'internal/controller/infoctl/infoctl.go'
  - source: 'src/internal/controller/infoctl/infoctl_get.go.tmpl'
    target: 'internal/controller/infoctl/infoctl_get.go'
  - source: 'src/internal/repository/configuration/configuration.go.tmpl'
    target: 'internal/repository/configuration/configuration.go'
  - source: 'src/internal/repository/idp/client.go.tmpl'
    target: 'internal/repository/idp/client.go'
  - source: 'src/internal/repository/idp/interface.go.tmpl'
    target: 'internal/repository/idp/interface.go'
  - source: 'src/internal/repository/logging/logging.go.tmpl'
    target: 'internal/repository/logging/logging.go'
  - source: 'src/internal/repository/timestamp/timestamp.go.tmpl'
    target: 'internal/repository/timestamp/timestamp.go'
  - source: 'src/internal/repository/vault/vault.go.tmpl'
    target: 'internal/repository/vault/vault.go'
  - source: 'src/internal/repository/vault/vault_test.go.tmpl'
    target: 'internal/repository/vault/vault_test.go'
  - source: 'src/internal/service/example/example.go.tmpl'
    target: 'internal/service/example/example.go'
  - source: 'src/test/acceptance/acc_example_test.go.tmpl'
    target: 'test/acceptance/acc_example_test.go'
  - source: 'src/test/acceptance/acc_health_test.go.tmpl'
    target: 'test/acceptance/acc_health_test.go'
  - source: 'src/test/acceptance/dummy.go.tmpl'
    target: 'test/acceptance/dummy.go'
  - source: 'src/test/acceptance/local-config.yaml.tmpl'
    target: 'test/acceptance/local-config.yaml'
  - source: 'src/test/acceptance/main_test.go.tmpl'
    target: 'test/acceptance/main_test.go'
  - source: 'src/test/acceptance/setup_test.go.tmpl'
    target: 'test/acceptance/setup_test.go'
  - source: 'src/test/acceptance/tokens_test.go.tmpl'
    target: 'test/acceptance/tokens_test.go'
  - source: 'src/test/acceptance/utils_test.go.tmpl'
    target: 'test/acceptance/utils_test.go'
  - source: 'src/test/mocks/idpmock/idpmock.go.tmpl'
    target: 'test/mocks/idpmock/idpmock.go'
  - source: 'src/Dockerfile.tmpl'
    target: 'Dockerfile'
  - source: 'src/gitignore.tmpl'
    target: '.gitignore'
  - source: 'src/go.mod.tmpl'
    target: 'go.mod'
  - source: 'src/go.sum.tmpl'
    target: 'go.sum'
  - source: 'src/LICENSE.tmpl'
    target: 'LICENSE'
  - source: 'src/README.md.tmpl'
    target: 'README.md'
variables:
  licenseOwner:
    description: 'The owner in the copyright line of the MIT license.'
    default: 'Eurofurence e.V.'
  licenseYear:
    description: 'The year in the copyright line of the MIT license.'
    pattern: '^[0-9]{4}$'
    default: '2024'
  maintainerEmail:
    description: 'Email address to use for maintainer information.'
    default: 'jsquirrel_github_9a6d@packetloss.de'
  repoBaseUrl:
    description: 'The URL of the github account, to be used in imports etc.'
    pattern: '^github.com/[a-zA-Z0-9-]+$'
    default: 'github.com/eurofurence'
  reviewers:
    description: 'List of github accounts to add as pull request reviewers.'
    default:
      - "Jumpy-Squirrel"
  serviceName:
    description: 'The name of the service to be rendered.'
    pattern: '^[a-z-]+$'
    default: 'reg-backend-template-test'
